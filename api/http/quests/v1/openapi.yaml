openapi: 3.0.3
info:
  title: Quest Management Service
  version: 1.5.0
  description: API for creating, retrieving, and managing quests. All endpoints require JWT authentication. User ID is automatically extracted from JWT token.

servers:
  - url: http://localhost:8080

security:
  - bearerAuth: []

paths:
  /quests:
    post:
      summary: Create a new quest
      operationId: createQuest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestRequest'
      responses:
        '201':
          description: Quest successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quest'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - invalid or missing JWT token
        '500':
          description: Internal server error

    get:
      summary: Get a list of all quests
      operationId: listQuests
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [created, posted, assigned, in_progress, declined, completed]
          description: Filter quests by status
      responses:
        '200':
          description: List of quests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quest'
        '401':
          description: Unauthorized - invalid or missing JWT token
        '500':
          description: Internal server error

  /quests/search-radius:
    get:
      summary: Search quests within a radius
      operationId: searchQuestsByRadius
      parameters:
        - name: lat
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
          description: Center latitude (-90 to 90)
        - name: lon
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
          description: Center longitude (-180 to 180)
        - name: radius_km
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: 0.1
            maximum: 20000
          description: Search radius in kilometers (0.1 to 20000 km)
      responses:
        '200':
          description: List of quests within the radius
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quest'
        '400':
          description: Invalid parameters
        '401':
          description: Unauthorized - invalid or missing JWT token
        '500':
          description: Internal server error

  /quests/assigned:
    get:
      summary: Get quests assigned to the authenticated user
      operationId: listAssignedQuests
      description: Returns all quests assigned to the user identified by the JWT token
      responses:
        '200':
          description: List of quests assigned to the authenticated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quest'
        '401':
          description: Unauthorized - invalid or missing JWT token
        '500':
          description: Internal server error

  /quests/{quest_id}:
    get:
      summary: Get quest details by ID
      operationId: getQuestById
      parameters:
        - name: quest_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique quest UUID
      responses:
        '200':
          description: Quest details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quest'
        '401':
          description: Unauthorized - invalid or missing JWT token
        '404':
          description: Quest not found
        '500':
          description: Internal server error

  /quests/{quest_id}/status:
    patch:
      summary: Change quest status
      operationId: changeQuestStatus
      parameters:
        - name: quest_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Quest UUID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeStatusRequest'
      responses:
        '200':
          description: Quest status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeQuestStatusResult'
        '400':
          description: Invalid status
        '401':
          description: Unauthorized - invalid or missing JWT token
        '404':
          description: Quest not found
        '500':
          description: Internal server error

  /quests/{quest_id}/assign:
    post:
      summary: Assign quest to the authenticated user
      operationId: assignQuest
      description: Assigns the quest to the user identified by the JWT token
      parameters:
        - name: quest_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Quest UUID
      responses:
        '200':
          description: Quest successfully assigned to the authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignQuestResult'
        '400':
          description: Invalid quest status for assignment
        '401':
          description: Unauthorized - invalid or missing JWT token
        '404':
          description: Quest not found
        '500':
          description: Internal server error

components:
  schemas:
    QuestStatus:
      type: string
      enum: [created, posted, assigned, in_progress, declined, completed]
      description: Quest status

    Coordinate:
      type: object
      properties:
        latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          description: Latitude coordinate
        longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          description: Longitude coordinate
        address:
          type: string
          minLength: 1
          maxLength: 500
          description: Optional address for this location (1-500 chars)
      required:
        - latitude
        - longitude

    CreateQuestRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
          pattern: "^\\S.*\\S$|^\\S$"
          description: Quest title (1-200 chars, cannot be only whitespace)
        description:
          type: string
          minLength: 1
          maxLength: 1000
          pattern: "^\\S.*\\S$|^\\S$"
          description: Quest description (1-1000 chars, cannot be only whitespace)
        difficulty:
          type: string
          enum: [easy, medium, hard]
        reward:
          type: integer
          minimum: 1
          maximum: 5
          description: Reward level from 1 to 5
        duration_minutes:
          type: integer
          minimum: 1
          maximum: 10080
          description: Quest duration in minutes (1 minute to 1 week)
        target_location:
          $ref: '#/components/schemas/Coordinate'
        execution_location:
          $ref: '#/components/schemas/Coordinate'
        equipment:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100
          maxItems: 50
          description: List of required equipment (max 50 items)
        skills:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100
          maxItems: 50
          description: List of required skills (max 50 items)
      required:
        - title
        - description
        - difficulty
        - reward
        - duration_minutes
        - target_location
        - execution_location

    ChangeStatusRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/QuestStatus'
      required:
        - status

    AssignQuestResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Quest ID
        assignee:
          type: string
          format: uuid
          description: User ID who was assigned to the quest
        status:
          $ref: '#/components/schemas/QuestStatus'
      required:
        - id
        - assignee
        - status

    ChangeQuestStatusResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Quest ID
        assignee:
          type: string
          format: uuid
          nullable: true
          description: User ID who is assigned to the quest (null if not assigned)
        status:
          $ref: '#/components/schemas/QuestStatus'
      required:
        - id
        - status

    Quest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        difficulty:
          type: string
          enum: [easy, medium, hard]
        reward:
          type: integer
          minimum: 1
          maximum: 5
          description: Reward level from 1 to 5
        duration_minutes:
          type: integer
          minimum: 1
          description: Quest duration in minutes
        target_location:
          $ref: '#/components/schemas/Coordinate'
        execution_location:
          $ref: '#/components/schemas/Coordinate'
        equipment:
          type: array
          items:
            type: string
        skills:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/QuestStatus'
        creator:
          type: string
        assignee:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        target_location_id:
          type: string
          nullable: true
          description: ID of the target location in locations table (if any)
        execution_location_id:
          type: string
          nullable: true
          description: ID of the execution location in locations table (if any)
      required:
        - id
        - title
        - description
        - difficulty
        - reward
        - duration_minutes
        - status
        - target_location
        - execution_location
        - creator
        - created_at
        - updated_at

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authentication token. Format - "Bearer <token>"